define
{
	name = "services.host"
	value = "services.irc.dannygrove.com"
}

uplink
{
	host = "irc.dannygrove.com"
	ipv6 = no
	ssl = yes
	port = 7000
	password = "{{ vault_irc.link_keys.services }}"
}

serverinfo
{
	name = "services.irc.dannygrove.com"
	description = "Services for #! IRC Network"
	pid = "data/services.pid"
	motd = "conf/services.motd"
}

module
{
	name = "unreal"
	use_server_side_mlock = yes
	use_server_side_topiclock = yes
}

networkinfo
{
	networkname = "#!"
	nicklen = 31
	userlen = 10
	hostlen = 64
	chanlen = 32
	modelistsize = 100
	vhost_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-"
	allow_undotted_vhosts = false
	disallow_start_or_end = ".-"
}

options
{
	user = "anope"
	group = "anope"
	casemap = "ascii"
	seed = 4826235
	strictpasswords = yes
	badpasslimit = 5
	badpasstimeout = 1h
	updatetimeout = 5m
	expiretimeout = 30m
	readtimeout = 5s
	warningtimeout = 4h
	timeoutcheck = 3s
	retrywait = 60s
	hideprivilegedcommands = yes
	hideregisteredcommands = yes
	regexengine = "regex/pcre"
	languages = "ca_ES.UTF-8 de_DE.UTF-8 el_GR.UTF-8 es_ES.UTF-8 fr_FR.UTF-8 hu_HU.UTF-8 it_IT.UTF-8 nl_NL.UTF-8 pl_PL.UTF-8 pt_PT.UTF-8 ru_RU.UTF-8 tr_TR.UTF-8"
}

include
{
	type = "file"
	name = "botserv.conf"
}

include
{
	type = "file"
	name = "chanserv.conf"
}

include
{
	type = "file"
	name = "global.conf"
}

include
{
	type = "file"
	name = "hostserv.conf"
}

include
{
	type = "file"
	name = "memoserv.conf"
}

include
{
	type = "file"
	name = "nickserv.conf"
}

include
{
	type = "file"
	name = "operserv.conf"
}

log
{
	target = "services.log"
	#target = "services.log #services"
	#source = ""
	bot = "Global"
	logage = 7
	admin = "*"
	override = "chanserv/* nickserv/* memoserv/set ~botserv/set botserv/*"
	commands = "~operserv/* *"
	servers = "*"
	#channels = "~mode *"
	users = "connect disconnect nick"
	other = "*"
	rawio = no
	debug = no
}

log
{
	target = "globops"
	admin = "global/* operserv/mode operserv/kick operserv/akill operserv/s*line operserv/noop operserv/jupe operserv/oline operserv/set operserv/svsnick operserv/svsjoin operserv/svspart nickserv/getpass */drop"
	servers = "squit"
	users = "oper"
	other = "expire/* bados akill/*"
}

opertype
{
	name = "Helper"
	commands = "hostserv/*"
}

opertype
{
	name = "Services Operator"
	inherits = "Helper, Another Helper"
	commands = "chanserv/list chanserv/suspend chanserv/topic memoserv/staff nickserv/list nickserv/suspend operserv/mode operserv/chankill operserv/akill operserv/session operserv/modinfo operserv/sqline operserv/oper operserv/kick operserv/ignore operserv/snline"
	privs = "chanserv/auspex chanserv/no-register-limit memoserv/* nickserv/auspex nickserv/confirm"
	#modes = "+o"
}

opertype
{
	name = "Services Administrator"
	inherits = "Services Operator"
	commands = "chanserv/access/list chanserv/drop chanserv/getkey chanserv/saset/noexpire memoserv/sendall nickserv/saset/* nickserv/getemail operserv/news operserv/jupe operserv/svs operserv/stats operserv/oline operserv/noop operserv/forbid global/*"
	privs = "*"
}


opertype
{
	name = "Services Root"
	commands = "*"
	privs = "*"
}

### Admins
{% for user in user_groups.admins %}

oper
{
	name = "{{ users[user].irc | default(user) }}"
	type = "Services Root"
	require_oper = yes
  {# FIXME: certfp entirely prevents admins from using OperServ #}
{#	{% if users[user].irc_oper.type == "sslclientcertfp" %}
	  certfp = "{{ users[user].irc_oper.pass | regex_replace(':', '') }}"
	{% endif %} #}
}
{% endfor %}


### IRCops
{% for user in user_groups.irc_ops %}

oper
{
	name = "{{ users[user].irc | default(user) }}"
	type = "Services Operator"
	require_oper = yes
{#	{% if users[user].irc_oper.type == "sslclientcertfp" %}
	  certfp = "{{ users[user].irc_oper.pass | regex_replace(':', '') }}"
	{% endif %} #}
}
{% endfor %}


mail
{
	usemail = no
	sendmailpath = "/usr/sbin/sendmail -t"
	sendfrom = "irc-services@dannygrove.com"
	delay = 5m
	#dontquoteaddresses = yes
	registration_subject = "Nickname registration for %n"
	registration_message = "Hi,

				You have requested to register the nickname %n on %N.
				Please type \" /msg NickServ CONFIRM %c \" to complete registration.

				If you don't know why this mail was sent to you, please ignore it silently.

				%N administrators."
	reset_subject = "Reset password request for %n"
	reset_message = "Hi,

			You have requested to have the password for %n reset.
			To reset your password, type \" /msg NickServ CONFIRM %n %c \"

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators."

	emailchange_subject = "Email confirmation"
	emailchange_message = "Hi,

			You have requested to change your email address to %e.
			Please type \" /msg NickServ CONFIRM %c \" to confirm this change.

			If you don't know why this mail was sent to you, please ignore it silently.

			%N administrators."

	memo_subject = "New memo"
	memo_message = "Hi %n,

			You've just received a new memo from %s. This is memo number %d.

			Memo text:

			%t"
}

module
{
	name = "db_flatfile"
	database = "anope.db"
	keepbackups = 0
	nobackupokay = yes
	fork = no
}

module {
  name = "m_ssl_gnutls"
  cert = "data/ssl/etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem"
  key = "data/ssl/etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem"
}

module { name = "m_sasl" }
module { name = "enc_sha256" }
module { name = "help" }
